{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-29T13:01:57.910Z",
    "end": "2023-09-29T13:01:57.920Z",
    "duration": 10,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5f0ad908-efa4-4d9d-95ca-a41b2c07e480",
      "title": "",
      "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
      "file": "/test/NumbersValidator.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01926af8-efc3-4203-833d-2bd34cba4c4c",
          "title": "isNumberEven test",
          "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
          "file": "/test/NumbersValidator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven test\"",
              "fullTitle": "isNumberEven test \"before each\" hook in \"isNumberEven test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "e0557a1e-3010-4f41-86f4-e560e76f6f0b",
              "parentUUID": "01926af8-efc3-4203-833d-2bd34cba4c4c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven test\"",
              "fullTitle": "isNumberEven test \"after each\" hook in \"isNumberEven test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "a95c0c24-3b2a-4a55-a614-807a0a9c01bc",
              "parentUUID": "01926af8-efc3-4203-833d-2bd34cba4c4c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return true if element is even",
              "fullTitle": "isNumberEven test should return true if element is even",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "7b8b4733-654e-45af-8ced-1d06ffc191a7",
              "parentUUID": "01926af8-efc3-4203-833d-2bd34cba4c4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if element is odd",
              "fullTitle": "isNumberEven test should return false if element is odd",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(5);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "8ae5bfdc-02e5-4c74-9ec3-00f74ba2584e",
              "parentUUID": "01926af8-efc3-4203-833d-2bd34cba4c4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if element is not a number",
              "fullTitle": "isNumberEven test should throw an error if element is not a number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw('[4] is not of type \"Number\" it is of type \"string\"');",
              "err": {},
              "uuid": "1a1206b3-f34a-4106-9cfe-a88ad5e41da2",
              "parentUUID": "01926af8-efc3-4203-833d-2bd34cba4c4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b8b4733-654e-45af-8ced-1d06ffc191a7",
            "8ae5bfdc-02e5-4c74-9ec3-00f74ba2584e",
            "1a1206b3-f34a-4106-9cfe-a88ad5e41da2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}