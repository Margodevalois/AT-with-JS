{
  "stats": {
    "suites": 5,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-29T13:53:28.877Z",
    "end": "2023-09-29T13:53:28.902Z",
    "duration": 25,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a2af66c1-1dc8-4abd-bc9e-e56f17f3b420",
      "title": "",
      "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
      "file": "/test/NumbersValidator.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a72134f8-70ee-4469-932b-b0cd0b5b3d18",
          "title": "NumbersValidator class tests",
          "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
          "file": "/test/NumbersValidator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"NumbersValidator class tests\"",
              "fullTitle": "NumbersValidator class tests \"before each\" hook in \"NumbersValidator class tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "9e053600-a383-4241-99c6-5d944cfa96c3",
              "parentUUID": "a72134f8-70ee-4469-932b-b0cd0b5b3d18",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"NumbersValidator class tests\"",
              "fullTitle": "NumbersValidator class tests \"after each\" hook in \"NumbersValidator class tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "c613e4a2-c527-47bf-9abe-6fe7ef9460b0",
              "parentUUID": "a72134f8-70ee-4469-932b-b0cd0b5b3d18",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "797fa2e0-acc1-419d-b992-947c068c91ba",
              "title": "isNumberEven test",
              "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
              "file": "/test/NumbersValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if element is even",
                  "fullTitle": "NumbersValidator class tests isNumberEven test should return true if element is even",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true);",
                  "err": {},
                  "uuid": "3127078c-1468-4308-b8ea-ea1bcd52e8ba",
                  "parentUUID": "797fa2e0-acc1-419d-b992-947c068c91ba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if element is odd",
                  "fullTitle": "NumbersValidator class tests isNumberEven test should return false if element is odd",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validationResults = validator.isNumberEven(5);\nexpect(validationResults).to.be.equal(false);",
                  "err": {},
                  "uuid": "c77e494d-7a44-4b81-929a-2a67c6eb12d3",
                  "parentUUID": "797fa2e0-acc1-419d-b992-947c068c91ba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if element is not a number",
                  "fullTitle": "NumbersValidator class tests isNumberEven test should throw an error if element is not a number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw('[4] is not of type \"Number\" it is of type \"string\"');",
                  "err": {},
                  "uuid": "b20b5259-d20b-45df-9fa8-8750f7138c71",
                  "parentUUID": "797fa2e0-acc1-419d-b992-947c068c91ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3127078c-1468-4308-b8ea-ea1bcd52e8ba",
                "c77e494d-7a44-4b81-929a-2a67c6eb12d3",
                "b20b5259-d20b-45df-9fa8-8750f7138c71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "17a7c1f0-7433-4ecc-a3e0-4da86bc5ddce",
              "title": "getEvenNumbersFromArray test",
              "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
              "file": "/test/NumbersValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return array of even numbers",
                  "fullTitle": "NumbersValidator class tests getEvenNumbersFromArray test should return array of even numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const arrayOfNums = [1, 2, 3, 4];\nconst validationResults = validator.getEvenNumbersFromArray(arrayOfNums);\nexpect(validationResults).to.deep.equal([2, 4]);",
                  "err": {},
                  "uuid": "97b5f9fa-dc8f-4fde-aa4f-e3aec0989efd",
                  "parentUUID": "17a7c1f0-7433-4ecc-a3e0-4da86bc5ddce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if element is not full of numbers",
                  "fullTitle": "NumbersValidator class tests getEvenNumbersFromArray test should throw an error if element is not full of numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const arrayOfValues = [1, '2', 3, 4];\nexpect(() => {\n  validator.getEvenNumbersFromArray(arrayOfValues); // ПОМЕНЯТЬ МАССИВ\n}).to.throw('[1,2,3,4] is not an array of \"Numbers\"');",
                  "err": {},
                  "uuid": "9d67a253-7516-46a2-a4a7-ecb3325710e9",
                  "parentUUID": "17a7c1f0-7433-4ecc-a3e0-4da86bc5ddce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97b5f9fa-dc8f-4fde-aa4f-e3aec0989efd",
                "9d67a253-7516-46a2-a4a7-ecb3325710e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "98557769-1b5c-4c52-86a8-4df02d8a8c5e",
              "title": "isAllNumbers test",
              "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
              "file": "/test/NumbersValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if all elements in array are numbers",
                  "fullTitle": "NumbersValidator class tests isAllNumbers test should return true if all elements in array are numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validationResults = validator.isAllNumbers([1, 2, 3, 4]);\nexpect(validationResults).to.be.equal(true);",
                  "err": {},
                  "uuid": "425764c8-e7d8-46c4-8cde-0a4de033d0bb",
                  "parentUUID": "98557769-1b5c-4c52-86a8-4df02d8a8c5e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if not all elements in array are numbers",
                  "fullTitle": "NumbersValidator class tests isAllNumbers test should return false if not all elements in array are numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validationResults = validator.isAllNumbers(['1', '2', 3, 4]);\nexpect(validationResults).to.be.equal(false);",
                  "err": {},
                  "uuid": "657b541e-1a42-4e9d-a83e-69be17d3096e",
                  "parentUUID": "98557769-1b5c-4c52-86a8-4df02d8a8c5e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if element is not an array",
                  "fullTitle": "NumbersValidator class tests isAllNumbers test should throw an error if element is not an array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => {\n  validator.isAllNumbers('4');\n}).to.throw('[4] is not an array');",
                  "err": {},
                  "uuid": "e90a5351-ecb0-4aad-ae6b-c5ef94c29fa2",
                  "parentUUID": "98557769-1b5c-4c52-86a8-4df02d8a8c5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "425764c8-e7d8-46c4-8cde-0a4de033d0bb",
                "657b541e-1a42-4e9d-a83e-69be17d3096e",
                "e90a5351-ecb0-4aad-ae6b-c5ef94c29fa2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "07391fe0-efed-4328-a2e3-738f2ee66d8c",
              "title": "isInteger test",
              "fullFile": "/Users/margo/course_epam/AT-with-JS/test/NumbersValidator.spec.js",
              "file": "/test/NumbersValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if value is integer",
                  "fullTitle": "NumbersValidator class tests isInteger test should return true if value is integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validationResults = validator.isInteger(2);\nexpect(validationResults).to.be.equal(true);",
                  "err": {},
                  "uuid": "e4336b69-7113-4204-9b9f-a8b36f491939",
                  "parentUUID": "07391fe0-efed-4328-a2e3-738f2ee66d8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if value is not integer",
                  "fullTitle": "NumbersValidator class tests isInteger test should throw an error if value is not integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => {\n  validator.isInteger('4');\n}).to.throw('[4] is not a number');",
                  "err": {},
                  "uuid": "1ffeb971-4d63-4e9c-a3e0-da39f361cfbb",
                  "parentUUID": "07391fe0-efed-4328-a2e3-738f2ee66d8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4336b69-7113-4204-9b9f-a8b36f491939",
                "1ffeb971-4d63-4e9c-a3e0-da39f361cfbb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}